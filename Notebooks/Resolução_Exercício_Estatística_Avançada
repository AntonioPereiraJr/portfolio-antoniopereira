{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Resolução_Exercício_Estatística_Avançada","provenance":[{"file_id":"1xrmBxs20zxYy6sFP1S3zjIk1Gxor1cFp","timestamp":1643158207440},{"file_id":"https://github.com/qymera0/dncPython/blob/main/estatAvan/regressaoStartup.ipynb","timestamp":1629221261472}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.11"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qt2hT1FIy6gr"},"source":["# 0 CARREGAMENTO DAS BIBLIOTECAS"]},{"cell_type":"code","metadata":{"id":"R9MyPEjzzAzg","executionInfo":{"status":"ok","timestamp":1644023650040,"user_tz":180,"elapsed":4,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import scipy as sp\n","import statsmodels.api as sm\n","import patsy as pt\n","from google.colab import drive\n","from sklearn import metrics\n","from sklearn.model_selection import train_test_split\n","from statsmodels.stats.outliers_influence import variance_inflation_factor\n","from sklearn.linear_model import Ridge"],"execution_count":64,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eeCBAH34zsot"},"source":["# 1 CARREGAMENTO DOS DADOS"]},{"cell_type":"markdown","metadata":{"id":"1wO569RK0RHy"},"source":["## 1.1 Montar o Google Drive"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w1Z-8rpbzebp","executionInfo":{"elapsed":5739,"status":"ok","timestamp":1644023657775,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"f47f39ea-f074-4207-de6a-23bff6592beb"},"source":["drive.mount('/content/gdrive', force_remount=True)"],"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"markdown","metadata":{"id":"9vVu1fNOAaT_"},"source":["# Nova seção"]},{"cell_type":"markdown","metadata":{"id":"Z8Az9HRS0U8p"},"source":["## 1.2 Ler o arquivo"]},{"cell_type":"code","metadata":{"id":"W0WxO2Gr0Z-p","executionInfo":{"status":"ok","timestamp":1644023666500,"user_tz":180,"elapsed":277,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}}},"source":["df = pd.read_csv('/content/gdrive/My Drive/Colab Notebooks/Data Expert/SLOT 05/50_Startups.csv')"],"execution_count":66,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Uwyk10w91BhV","executionInfo":{"elapsed":318,"status":"ok","timestamp":1644014970280,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"7d8588e5-b2d7-4d12-ca1d-28ea5a5f3d34"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-beaf0b28-4ae9-44c5-8e6c-553b0a20f86f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","      <th>State</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>165349.20</td>\n","      <td>136897.80</td>\n","      <td>471784.10</td>\n","      <td>New York</td>\n","      <td>192261.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>162597.70</td>\n","      <td>151377.59</td>\n","      <td>443898.53</td>\n","      <td>California</td>\n","      <td>191792.06</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>153441.51</td>\n","      <td>101145.55</td>\n","      <td>407934.54</td>\n","      <td>Florida</td>\n","      <td>191050.39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>144372.41</td>\n","      <td>118671.85</td>\n","      <td>383199.62</td>\n","      <td>New York</td>\n","      <td>182901.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142107.34</td>\n","      <td>91391.77</td>\n","      <td>366168.42</td>\n","      <td>Florida</td>\n","      <td>166187.94</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-beaf0b28-4ae9-44c5-8e6c-553b0a20f86f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-beaf0b28-4ae9-44c5-8e6c-553b0a20f86f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-beaf0b28-4ae9-44c5-8e6c-553b0a20f86f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   R&D Spend  Administration  Marketing Spend       State     Profit\n","0  165349.20       136897.80        471784.10    New York  192261.83\n","1  162597.70       151377.59        443898.53  California  191792.06\n","2  153441.51       101145.55        407934.54     Florida  191050.39\n","3  144372.41       118671.85        383199.62    New York  182901.99\n","4  142107.34        91391.77        366168.42     Florida  166187.94"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"-CWKmVAo1O77"},"source":["# 2 EDA"]},{"cell_type":"markdown","metadata":{"id":"oQAFS22j1UPo"},"source":["## 2.1 Estatísticas descritivas"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"5WFTO5ON1RRx","executionInfo":{"elapsed":309,"status":"ok","timestamp":1644015053096,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"f881c0bd-6634-4faa-96b6-cfa3157162b4"},"source":["df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e4175851-4df7-411e-9952-f80e965a9f0e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>50.000000</td>\n","      <td>50.000000</td>\n","      <td>50.000000</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>73721.615600</td>\n","      <td>121344.639600</td>\n","      <td>211025.097800</td>\n","      <td>112012.639200</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>45902.256482</td>\n","      <td>28017.802755</td>\n","      <td>122290.310726</td>\n","      <td>40306.180338</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>51283.140000</td>\n","      <td>0.000000</td>\n","      <td>14681.400000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>39936.370000</td>\n","      <td>103730.875000</td>\n","      <td>129300.132500</td>\n","      <td>90138.902500</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>73051.080000</td>\n","      <td>122699.795000</td>\n","      <td>212716.240000</td>\n","      <td>107978.190000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>101602.800000</td>\n","      <td>144842.180000</td>\n","      <td>299469.085000</td>\n","      <td>139765.977500</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>165349.200000</td>\n","      <td>182645.560000</td>\n","      <td>471784.100000</td>\n","      <td>192261.830000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4175851-4df7-411e-9952-f80e965a9f0e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4175851-4df7-411e-9952-f80e965a9f0e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4175851-4df7-411e-9952-f80e965a9f0e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["           R&D Spend  Administration  Marketing Spend         Profit\n","count      50.000000       50.000000        50.000000      50.000000\n","mean    73721.615600   121344.639600    211025.097800  112012.639200\n","std     45902.256482    28017.802755    122290.310726   40306.180338\n","min         0.000000    51283.140000         0.000000   14681.400000\n","25%     39936.370000   103730.875000    129300.132500   90138.902500\n","50%     73051.080000   122699.795000    212716.240000  107978.190000\n","75%    101602.800000   144842.180000    299469.085000  139765.977500\n","max    165349.200000   182645.560000    471784.100000  192261.830000"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"D4Q2Na_81sR9"},"source":["## 2.2 Análise gráfica"]},{"cell_type":"markdown","metadata":{"id":"Rg7Cags62weD"},"source":["### 2.2.1 Nome das colunas"]},{"cell_type":"code","metadata":{"id":"B7yGBppi1wkg"},"source":["contColNames = list(df.select_dtypes(include='number').columns)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"l3WeEarr21zI"},"source":["### 2.2.2 Cofigurarar tamanho do subplot"]},{"cell_type":"code","metadata":{"id":"ew3A--yz2YoP"},"source":["ncols = 3"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HSxNRthV3JpN"},"source":["nrows = int(np.ceil(len(contColNames)/(1.0 * ncols)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_YeLd4V2-HXk"},"source":["### 2.2.3 Plotar os histogramas"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"LRC5eiBP4aeU","executionInfo":{"elapsed":1269,"status":"ok","timestamp":1644016102090,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"ae513bf9-8a2b-4104-a4cc-3f7ddcd15251"},"source":["fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20,10))\n","\n","counter = 0 \n","\n","for i in range(nrows):\n","  for j in range(ncols):\n","\n","    ax = axes[i][j]\n","\n","    # Plotar somente quando houver dados\n","    if counter < len(contColNames):\n","\n","      ax.hist(df.select_dtypes(include='number')[contColNames[counter]], bins=10)\n","      ax.set_xlabel(contColNames[counter])\n","      ax.set_ylabel('Frequência')\n","\n","    else:\n","      ax.set_axis_off()\n","\n","    counter += 1\n","\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x720 with 6 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"rkvqVz7s7qKN"},"source":["### 2.2.4 Plotar o gráfico de barras"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"1QeykO_Z76zO","executionInfo":{"elapsed":917,"status":"ok","timestamp":1644016387433,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"3c89fc47-397c-4d4c-be20-ac0586968fc4"},"source":["sns.set_theme()\n","fig = plt.figure()\n","\n","plt.bar(df['State'].unique(), df['State'].value_counts())\n","\n","plt.title('Distribuição dos estados', loc='left')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.0, 1.0, 'Distribuição dos estados')"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"cKh5FdD-97WO"},"source":["### 2.2.5 Plotar gráfico de correlação"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"oArGZtFW79O0","executionInfo":{"elapsed":8122,"status":"ok","timestamp":1644016399452,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"ee84ef19-1a34-41bb-fe82-978b47d0586a"},"source":["sns.pairplot(df)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x7fa28bba7810>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 20 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"BjekOMSo-xZ2"},"source":["### 2.2.6 Plotar o box-plot"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":322},"id":"tqcabK7m-ac7","executionInfo":{"elapsed":312,"status":"ok","timestamp":1644016407296,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"e8d79198-68bd-4b7e-b4e0-a8e01c9bf488"},"source":["fig = plt.figure()\n","\n","sns.boxplot(x = df['State'], y = df['Profit'])\n","\n","plt.title('Lucro (USD$) das Startups', fontsize = 18, fontweight = 18, loc = 'left')\n","\n","plt.ylabel('')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, '')"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"sJPtl0k8AYgH"},"source":["# 3 PRÉ-PROCESSAMENTO DOS DADOS"]},{"cell_type":"markdown","metadata":{"id":"0NQAdlQZAkN8"},"source":["## 3.1 Separar as variáveis"]},{"cell_type":"markdown","metadata":{"id":"WXbV_DnPAoOu"},"source":["### 3.1.1 Variáveis contínuas"]},{"cell_type":"code","metadata":{"id":"6T6nWp5O_MAe"},"source":["dfNum = df.select_dtypes(include='number').drop(['Profit'], axis = 1)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Yhrjt4G2Ay_S","executionInfo":{"elapsed":14,"status":"ok","timestamp":1644016495638,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"f15bf5db-47c1-480d-9f6c-14bde43b823c"},"source":["dfNum.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-3a493132-c5fe-42b7-be39-9de4cf485f1c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>165349.20</td>\n","      <td>136897.80</td>\n","      <td>471784.10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>162597.70</td>\n","      <td>151377.59</td>\n","      <td>443898.53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>153441.51</td>\n","      <td>101145.55</td>\n","      <td>407934.54</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>144372.41</td>\n","      <td>118671.85</td>\n","      <td>383199.62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142107.34</td>\n","      <td>91391.77</td>\n","      <td>366168.42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a493132-c5fe-42b7-be39-9de4cf485f1c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3a493132-c5fe-42b7-be39-9de4cf485f1c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3a493132-c5fe-42b7-be39-9de4cf485f1c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   R&D Spend  Administration  Marketing Spend\n","0  165349.20       136897.80        471784.10\n","1  162597.70       151377.59        443898.53\n","2  153441.51       101145.55        407934.54\n","3  144372.41       118671.85        383199.62\n","4  142107.34        91391.77        366168.42"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"ITVR4-pNBSlu"},"source":["### 3.1.2 Variáveis categoricas"]},{"cell_type":"code","metadata":{"id":"FMoYMgxaA0yD"},"source":["# Mudar o tipo de variável para 'categórico'\n","df['State'] = df['State'].astype('category')\n","\n","# Selecionar somente as variáveis categóricas\n","dfCat = df.select_dtypes(include='category')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"AQbe-o3WBcWJ","executionInfo":{"elapsed":318,"status":"ok","timestamp":1644016531171,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"0f8384a6-b815-4e8d-b978-4681dbbaba48"},"source":["dfCat.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-768b6696-712f-4d37-9069-7484f405e199\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>New York</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>California</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Florida</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>New York</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Florida</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-768b6696-712f-4d37-9069-7484f405e199')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-768b6696-712f-4d37-9069-7484f405e199 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-768b6696-712f-4d37-9069-7484f405e199');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        State\n","0    New York\n","1  California\n","2     Florida\n","3    New York\n","4     Florida"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"7ueViob3CoX7"},"source":["### 3.1.3 Resposta"]},{"cell_type":"code","metadata":{"id":"ELoexg6aBdyc"},"source":["y = df['Profit']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0I9NWOXCC6VV"},"source":["## 3.2 Pré-tratamento da resposta\n"]},{"cell_type":"markdown","metadata":{"id":"uTAfge6SD70o"},"source":["### 3.2.1 Teste resposta original"]},{"cell_type":"code","metadata":{"id":"ENgkt94aCvLw"},"source":["kStat, kPvalue = sp.stats.kstest(rvs=y, cdf='norm')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FXQ-7kmYDteQ","executionInfo":{"elapsed":6,"status":"ok","timestamp":1644016605830,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"4c5ce003-f06c-41d6-e47f-c92042a3a7e2"},"source":["kStat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kknnpiwsDvBu","executionInfo":{"elapsed":2,"status":"ok","timestamp":1644016607236,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"6251662a-11f6-40a8-e147-712c2f8f0c87"},"source":["kPvalue"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"EGDiPwaVEBRN"},"source":["### 3.2.3 Teste log da resposta"]},{"cell_type":"code","metadata":{"id":"l582wI_DEETK"},"source":["kStat, kPvalue = sp.stats.kstest(rvs=np.log(y), cdf='norm')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZAtYzsXrELLJ","executionInfo":{"elapsed":4,"status":"ok","timestamp":1644016645972,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"689f675c-a35b-4551-e015-c4ad91403c52"},"source":["kStat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xDY2S6y2EMs0","executionInfo":{"elapsed":4,"status":"ok","timestamp":1644016647181,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"64fb82f3-b1eb-4afb-8e9b-8ee38eee82e8"},"source":["kPvalue"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"H1-UD05JEOSp","executionInfo":{"elapsed":714,"status":"ok","timestamp":1644016652584,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"ecacb585-cf40-4987-9bc4-8ef109b3ad9b"},"source":["fig = plt.figure()\n","plt.hist(np.log(y))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1.,  0.,  0.,  1.,  2.,  2.,  6., 17., 11., 10.]),\n"," array([ 9.59433667,  9.85156434, 10.10879202, 10.36601969, 10.62324737,\n","        10.88047504, 11.13770272, 11.39493039, 11.65215807, 11.90938574,\n","        12.16661342]),\n"," <a list of 10 Patch objects>)"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Op7sDrl4EtJf"},"source":["## 3.3 Pré-tratamento das vaiáveis contínuas"]},{"cell_type":"code","metadata":{"id":"RIzMPQsREzj6"},"source":["# Criar a função para o escalonamento dos dados\n","def feat_scale(X):\n","\n","  # Calcular a média de todas as variáveis\n","  mu = np.mean(X, axis = 0)\n","\n","  # Calcular o devio padrão de todas as variáveis\n","  sigma = np.std(X, axis=0, ddof=1)\n","\n","  # Fazer os escalonamento das variáveis\n","  xNorm = (X - mu)/sigma\n","\n","  return xNorm"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hdrKmUBGGpf_"},"source":["dfNorm = feat_scale(dfNum)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ejCCa2HuGupM","executionInfo":{"elapsed":283,"status":"ok","timestamp":1644016750885,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"19adfc0f-8c41-46c5-e428-c71b6d293755"},"source":["dfNorm.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-688c86ad-83ff-4873-bcc5-4af158188c5e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.996146</td>\n","      <td>0.555117</td>\n","      <td>2.132295</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.936203</td>\n","      <td>1.071924</td>\n","      <td>1.904267</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.736731</td>\n","      <td>-0.720938</td>\n","      <td>1.610180</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.539157</td>\n","      <td>-0.095396</td>\n","      <td>1.407916</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.489812</td>\n","      <td>-1.069066</td>\n","      <td>1.268648</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-688c86ad-83ff-4873-bcc5-4af158188c5e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-688c86ad-83ff-4873-bcc5-4af158188c5e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-688c86ad-83ff-4873-bcc5-4af158188c5e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   R&D Spend  Administration  Marketing Spend\n","0   1.996146        0.555117         2.132295\n","1   1.936203        1.071924         1.904267\n","2   1.736731       -0.720938         1.610180\n","3   1.539157       -0.095396         1.407916\n","4   1.489812       -1.069066         1.268648"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"tTA_3Y41HMVu"},"source":["## 3.4 Pré-tratamento das variáveis categóricas"]},{"cell_type":"code","metadata":{"id":"tsz245nUHSgN"},"source":["dfDum = pd.get_dummies(dfCat)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RsbDehAYHhKB","executionInfo":{"elapsed":6,"status":"ok","timestamp":1644016840587,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"209dbb48-6bbe-4c57-d172-8abc6633b300"},"source":["dfDum.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-c9f84b63-1191-4cde-8842-9ebfb9182e7f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State_California</th>\n","      <th>State_Florida</th>\n","      <th>State_New York</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9f84b63-1191-4cde-8842-9ebfb9182e7f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9f84b63-1191-4cde-8842-9ebfb9182e7f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9f84b63-1191-4cde-8842-9ebfb9182e7f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   State_California  State_Florida  State_New York\n","0                 0              0               1\n","1                 1              0               0\n","2                 0              1               0\n","3                 0              0               1\n","4                 0              1               0"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"2TTZcbiDHjV1"},"source":["dfFinal = pd.concat([dfNorm.reset_index(drop=True), dfDum], axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"P03i4PUMH9TG","executionInfo":{"elapsed":288,"status":"ok","timestamp":1644016846224,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"3685b046-fcc2-47ea-d9a8-31f38462732f"},"source":["dfFinal.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-f81caa10-f52c-4a67-8c97-44ae8bb2dd05\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","      <th>State_California</th>\n","      <th>State_Florida</th>\n","      <th>State_New York</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.996146</td>\n","      <td>0.555117</td>\n","      <td>2.132295</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.936203</td>\n","      <td>1.071924</td>\n","      <td>1.904267</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.736731</td>\n","      <td>-0.720938</td>\n","      <td>1.610180</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.539157</td>\n","      <td>-0.095396</td>\n","      <td>1.407916</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.489812</td>\n","      <td>-1.069066</td>\n","      <td>1.268648</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f81caa10-f52c-4a67-8c97-44ae8bb2dd05')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f81caa10-f52c-4a67-8c97-44ae8bb2dd05 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f81caa10-f52c-4a67-8c97-44ae8bb2dd05');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   R&D Spend  Administration  ...  State_Florida  State_New York\n","0   1.996146        0.555117  ...              0               1\n","1   1.936203        1.071924  ...              0               0\n","2   1.736731       -0.720938  ...              1               0\n","3   1.539157       -0.095396  ...              0               1\n","4   1.489812       -1.069066  ...              1               0\n","\n","[5 rows x 6 columns]"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"AN495oVN2ZN-"},"source":["# 4 AJUSTE DO MODELO DE REGRESSÃO"]},{"cell_type":"markdown","metadata":{"id":"jZZ7bpNb2dDi"},"source":["## 4.1 Método dos mínimos quadrados"]},{"cell_type":"markdown","metadata":{"id":"8buG_KKf4HlT"},"source":["### 4.1.1 Adição da resposta e alteração dos nomes das colunas"]},{"cell_type":"code","metadata":{"id":"lgXd_qZM4S58"},"source":["# Adição das respostas\n","dfFull = pd.concat([y, dfFinal], axis = 1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"k8xZT8G74lJJ"},"source":["# Alterar nome das colunas\n","dfFull.rename(columns={'R&D Spend':'rd',\n","                       'Administration':'adm',\n","                       'Marketing Spend':'mkt',\n","                       'State_California':'ca',\n","                       'State_Florida':'fl',\n","                       'State_New York':'ny'},\n","              inplace = True\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CWhPsd8T5sx5"},"source":["### 4.1.2 Função para escrever a fórmula\n"]},{"cell_type":"code","metadata":{"id":"_jJ6sQ2f5ymf"},"source":["def ols_formula(df, dependent_var, *excluded_rows):\n","\n","  # Listar o nome das colunas do dataframe\n","  dfCols = list(df.columns.values)\n","\n","  # Remover a variável dependente\n","  dfCols.remove(dependent_var)\n","\n","  # Remover as variáveis excluídas\n","  for col in excluded_rows:\n","    dfCols.remove(col)\n","\n","  # Retornar a fórmula\n","  return dependent_var + ' ~ ' + ' + '.join(dfCols)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8FCEFwNN7ZJq"},"source":["### 4.1.3 Matrix do modelo"]},{"cell_type":"code","metadata":{"id":"6C0tcD_z3Y1K"},"source":["y, X = pt.dmatrices(ols_formula(dfFull, 'Profit'), data = dfFull , return_type='dataframe')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kwg7Vy_N70oT"},"source":["### 4.1.3 Ajuste do modelo"]},{"cell_type":"code","metadata":{"id":"KvhIwQWd2cFm"},"source":["# Especificação do modelo\n","reg1 = sm.OLS(y, X)\n","\n","# Executa o método dos mínimos quadrados\n","reg1fit = reg1.fit()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fd3s5_-l8JNc","executionInfo":{"elapsed":290,"status":"ok","timestamp":1644017904609,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"4455370a-6f44-43a9-f6ea-1b701c171bdf"},"source":["print(reg1fit.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Profit   R-squared:                       0.951\n","Model:                            OLS   Adj. R-squared:                  0.945\n","Method:                 Least Squares   F-statistic:                     169.9\n","Date:                Fri, 04 Feb 2022   Prob (F-statistic):           1.34e-27\n","Time:                        23:36:13   Log-Likelihood:                -525.38\n","No. Observations:                  50   AIC:                             1063.\n","Df Residuals:                      44   BIC:                             1074.\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept   8.401e+04   1001.609     83.877      0.000     8.2e+04     8.6e+04\n","rd            3.7e+04   2130.184     17.369      0.000    3.27e+04    4.13e+04\n","adm         -756.6017   1463.413     -0.517      0.608   -3705.917    2192.714\n","mkt         3299.3756   2096.320      1.574      0.123    -925.479    7524.231\n","ca          2.795e+04   1932.496     14.464      0.000    2.41e+04    3.18e+04\n","fl          2.815e+04   1993.572     14.121      0.000    2.41e+04    3.22e+04\n","ny          2.791e+04   1913.989     14.582      0.000    2.41e+04    3.18e+04\n","==============================================================================\n","Omnibus:                       14.782   Durbin-Watson:                   1.283\n","Prob(Omnibus):                  0.001   Jarque-Bera (JB):               21.266\n","Skew:                          -0.948   Prob(JB):                     2.41e-05\n","Kurtosis:                       5.572   Cond. No.                     1.50e+16\n","==============================================================================\n","\n","Warnings:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 3.83e-31. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n"]}]},{"cell_type":"markdown","metadata":{"id":"byXEmTIXnWnm"},"source":["## 4.2 Método do Gradiente descendente"]},{"cell_type":"markdown","metadata":{"id":"9bnJwpR0nfCq"},"source":["### 4.2.1 Função perda"]},{"cell_type":"code","metadata":{"id":"eqSDMb21nZjg"},"source":["def funcao_perda(X, y, beta):\n","\n","  \"\"\"\n","  X é a matriz com os regressores (m x n).\n","  y é a série com a resposta (1, m).\n","  beta é a série dos parâmetros (1 x n).\n","  \"\"\"\n","\n","  # Previsão da resposta\n","  pred = X.dot(beta)\n","\n","  # Calcular os erros de previsão\n","  res = np.subtract(pred, y.squeeze())\n","\n","  # Calcular o quadrado dos erros\n","  sqrRes = np.square(res)\n","\n","  # Calcular a perda\n","  perda = 1/(2*m) * np.sum(sqrRes)\n","\n","  return perda"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"E-2mftd7qawX"},"source":["### 4.2.2 Função gradiente descendente"]},{"cell_type":"code","metadata":{"id":"QcRGSxjEqVCd"},"source":["def grad_des(X, y, beta, alpha, itera):\n","\n","  \"\"\"\n","  X é a matriz dos regressores (m x n).\n","  y é a série da resposta (1 x m).\n","  beta é a série dos valores iniciais dos parâmetros (1 x n).\n","  alpha é a taxa de aprendizagem (escalar).\n","  itera é o número de iterações do algoritmo.\n","\n","  __________________________________________\n","  Resultados\n","\n","  beta é a série com os valores finais dos parâmetros.\n","  hperda é a série histórica das perdas.\n","\n","  \"\"\"\n","\n","  # Inicializa a série do histórico de perdas\n","  hPerda = np.zeros(itera)\n","\n","  for i in range(itera):\n","\n","    # Calcula as previsões com os valores atuais dos parâmetros\n","    pred = X.dot(beta)\n","\n","    # Calcula os resíduos da previsão\n","    res = np.subtract(pred, y.squeeze())\n","\n","    # Calcula o incremento / decremento valor dos betas - derivada parcial da função perda\n","    sumDelta = (alpha / m) * X.transpose().dot(res)\n","\n","    # Atualizar o varlos dos betas do modelo\n","    beta = beta - sumDelta\n","\n","    #Calcula a nova perda com os novos valores dos betas\n","    hPerda[i] = funcao_perda(X, y, beta)\n","\n","  return beta, hPerda\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OF7qLBAavPLy"},"source":["### 4.2.3 Aplicação do algoritmo de gradiente descendente"]},{"cell_type":"markdown","metadata":{"id":"XF4VgjY_wi8Z"},"source":["#### Configuração do algoritmo"]},{"cell_type":"code","metadata":{"id":"y4kHTFB9u_LU"},"source":["# Salvar o tamanho do df com os regressores (incluindo o intercept)\n","m, n = X.shape\n","\n","# Inicializa a série de betas\n","beta = np.zeros(n)\n","\n","# Iterações\n","itera = 1000\n","\n","# Taxa de aprendizagem\n","alpha = 0.3"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WYvJWz_pwnb5"},"source":["#### Aplicação do algoritmo"]},{"cell_type":"code","metadata":{"id":"f8XGNKN8wpr5"},"source":["beta, hPerda = grad_des(X = X, y = y, beta = beta, alpha = alpha, itera = itera)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vOcxYuB7x0iI","executionInfo":{"elapsed":13,"status":"ok","timestamp":1644018339874,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"85293682-e183-4907-8634-f3930daa5d25"},"source":["beta"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept    84011.676723\n","rd           36998.279697\n","adm           -756.601699\n","mkt           3299.375589\n","ca           27951.591650\n","fl           28150.380443\n","ny           27909.704631\n","dtype: float64"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"6CGZVDdDx-cA","executionInfo":{"elapsed":897,"status":"ok","timestamp":1644018350931,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"9db702be-c06e-4b80-9284-517a3df10b63"},"source":["# Estudo de convergência\n","\n","fig = plt.figure()\n","\n","plt.plot(range(1, itera + 1), hPerda, color = 'blue')\n","\n","plt.xlabel('Iterações')\n","\n","plt.ylabel('Erro quadrado médio')\n","\n","plt.title('Histórico de perdas', loc = 'left')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.0, 1.0, 'Histórico de perdas')"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"n1z3McQuAd27"},"source":["# 5 SIGNIFICÂNCIA ESTATÍSTICA"]},{"cell_type":"markdown","metadata":{"id":"8C3Sk3fyDCzh"},"source":["## 5.1 Recap sumário do modelo"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6g3RRlB1BU54","executionInfo":{"elapsed":270,"status":"ok","timestamp":1644019279120,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"2149c6c8-3b57-4def-e9ec-896f65e81976"},"source":["print(reg1fit.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Profit   R-squared:                       0.951\n","Model:                            OLS   Adj. R-squared:                  0.945\n","Method:                 Least Squares   F-statistic:                     169.9\n","Date:                Fri, 04 Feb 2022   Prob (F-statistic):           1.34e-27\n","Time:                        23:59:07   Log-Likelihood:                -525.38\n","No. Observations:                  50   AIC:                             1063.\n","Df Residuals:                      44   BIC:                             1074.\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept   8.401e+04   1001.609     83.877      0.000     8.2e+04     8.6e+04\n","rd            3.7e+04   2130.184     17.369      0.000    3.27e+04    4.13e+04\n","adm         -756.6017   1463.413     -0.517      0.608   -3705.917    2192.714\n","mkt         3299.3756   2096.320      1.574      0.123    -925.479    7524.231\n","ca          2.795e+04   1932.496     14.464      0.000    2.41e+04    3.18e+04\n","fl          2.815e+04   1993.572     14.121      0.000    2.41e+04    3.22e+04\n","ny          2.791e+04   1913.989     14.582      0.000    2.41e+04    3.18e+04\n","==============================================================================\n","Omnibus:                       14.782   Durbin-Watson:                   1.283\n","Prob(Omnibus):                  0.001   Jarque-Bera (JB):               21.266\n","Skew:                          -0.948   Prob(JB):                     2.41e-05\n","Kurtosis:                       5.572   Cond. No.                     1.50e+16\n","==============================================================================\n","\n","Warnings:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 3.83e-31. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n"]}]},{"cell_type":"markdown","metadata":{"id":"fCPwlBGSJjyS"},"source":["## 5.2 Reajuste do modelo (modelo reduzido)"]},{"cell_type":"markdown","metadata":{"id":"DiRghdSyJqAy"},"source":["### 5.2.1 Nova matrix do modelo"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"sXS3UAOeJ2e-","executionInfo":{"elapsed":282,"status":"ok","timestamp":1644019289495,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"4aefe4b2-f8bd-40a4-b7c6-c0b88f115cb5"},"source":["ols_formula(dfFull, 'Profit', 'adm')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Profit ~ rd + mkt + ca + fl + ny'"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"RvPvip-sDLJz"},"source":["y, Xred = pt.dmatrices(ols_formula(dfFull, 'Profit', 'adm'), data = dfFull , return_type='dataframe')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uzLP5r8VKUHd"},"source":["# Especificação do modelo\n","reg2 = sm.OLS(y, Xred)\n","\n","# Executa o método dos mínimos quadrados\n","reg2fit = reg2.fit()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bK9AibMiKh-y","executionInfo":{"elapsed":379,"status":"ok","timestamp":1644019329586,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"fa3ebc69-3fdf-4d5d-9c2b-0fec2bf2e44d"},"source":["print(reg2fit.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Profit   R-squared:                       0.950\n","Model:                            OLS   Adj. R-squared:                  0.946\n","Method:                 Least Squares   F-statistic:                     215.8\n","Date:                Fri, 04 Feb 2022   Prob (F-statistic):           9.72e-29\n","Time:                        23:59:58   Log-Likelihood:                -525.53\n","No. Observations:                  50   AIC:                             1061.\n","Df Residuals:                      45   BIC:                             1071.\n","Df Model:                           4                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept   8.401e+04    993.420     84.567      0.000     8.2e+04     8.6e+04\n","rd          3.657e+04   1948.322     18.771      0.000    3.26e+04    4.05e+04\n","mkt         3638.2094   1974.965      1.842      0.072    -339.575    7615.993\n","ca          2.796e+04   1916.569     14.590      0.000    2.41e+04    3.18e+04\n","fl           2.81e+04   1975.275     14.228      0.000    2.41e+04    3.21e+04\n","ny          2.794e+04   1897.221     14.729      0.000    2.41e+04    3.18e+04\n","==============================================================================\n","Omnibus:                       14.640   Durbin-Watson:                   1.257\n","Prob(Omnibus):                  0.001   Jarque-Bera (JB):               21.037\n","Skew:                          -0.938   Prob(JB):                     2.70e-05\n","Kurtosis:                       5.565   Cond. No.                     2.54e+16\n","==============================================================================\n","\n","Warnings:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 1.32e-31. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n"]}]},{"cell_type":"markdown","metadata":{"id":"JsOkITsgsEbK"},"source":["# 6 QUALIDADE DE AJUSTE"]},{"cell_type":"markdown","metadata":{"id":"VDQ0vnCksJhX"},"source":["## 6.1 Separar os datasets"]},{"cell_type":"code","metadata":{"id":"sLsyMEAxsIKy"},"source":["xTrain, xTest, yTrain, yTest = train_test_split(X, y, test_size = 0.1, random_state = 0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sDNQSkBDtn9N"},"source":["xTrain.reset_index(drop=True, inplace=True)\n","xTest.reset_index(drop=True, inplace=True)\n","yTrain.reset_index(drop=True, inplace=True)\n","yTest.reset_index(drop=True, inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vBDRlOhwuSlM"},"source":["## 6.2 Ajuste do modelo - mínimos quadrados"]},{"cell_type":"markdown","metadata":{"id":"CFxkmpMyvR15"},"source":["### 6.2.1 Modelo 'full'"]},{"cell_type":"code","metadata":{"id":"nYTBuQ_BudU9"},"source":["reg3 = sm.OLS(yTrain, xTrain)\n","reg3fit = reg3.fit()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zKaRDOMEu9AG","executionInfo":{"elapsed":9,"status":"ok","timestamp":1644020759420,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"8d107518-3e75-41cb-ace4-a23ec4368912"},"source":["print(reg3fit.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Profit   R-squared:                       0.949\n","Model:                            OLS   Adj. R-squared:                  0.942\n","Method:                 Least Squares   F-statistic:                     145.1\n","Date:                Sat, 05 Feb 2022   Prob (F-statistic):           4.15e-24\n","Time:                        00:23:48   Log-Likelihood:                -473.01\n","No. Observations:                  45   AIC:                             958.0\n","Df Residuals:                      39   BIC:                             968.9\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept   8.333e+04   1082.962     76.948      0.000    8.11e+04    8.55e+04\n","rd          3.573e+04   2265.524     15.771      0.000    3.11e+04    4.03e+04\n","adm          159.8963   1647.088      0.097      0.923   -3171.653    3491.446\n","mkt         3929.7297   2154.964      1.824      0.076    -429.097    8288.556\n","ca           2.79e+04   2045.226     13.643      0.000    2.38e+04     3.2e+04\n","fl          2.675e+04   2295.676     11.652      0.000    2.21e+04    3.14e+04\n","ny          2.868e+04   1981.012     14.478      0.000    2.47e+04    3.27e+04\n","==============================================================================\n","Omnibus:                       16.046   Durbin-Watson:                   2.488\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):               25.322\n","Skew:                          -1.020   Prob(JB):                     3.17e-06\n","Kurtosis:                       6.057   Cond. No.                     9.65e+15\n","==============================================================================\n","\n","Warnings:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 8.63e-31. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n"]}]},{"cell_type":"markdown","metadata":{"id":"SiCEfJu_Asgw"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"RNE86OjFvXJC"},"source":["### 6.2.2 Modelo 'reduzido' "]},{"cell_type":"code","metadata":{"id":"_TrOHOshvpUb"},"source":["xTrainRed = xTrain.drop(['adm'], axis = 1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2Ljvt0eKv1lV"},"source":["reg4 = sm.OLS(yTrain, xTrainRed.drop(['ca'], axis=1))\n","reg4fit = reg4.fit()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4VCgDyJlv7Pj","executionInfo":{"elapsed":3,"status":"ok","timestamp":1644020785877,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"933d5695-83a0-4b2c-b410-b8081ab3321e"},"source":["print(reg4fit.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                 Profit   R-squared:                       0.949\n","Model:                            OLS   Adj. R-squared:                  0.944\n","Method:                 Least Squares   F-statistic:                     186.0\n","Date:                Sat, 05 Feb 2022   Prob (F-statistic):           2.85e-25\n","Time:                        00:24:14   Log-Likelihood:                -473.01\n","No. Observations:                  45   AIC:                             956.0\n","Df Residuals:                      40   BIC:                             965.1\n","Df Model:                           4                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","Intercept   1.112e+05   2390.740     46.533      0.000    1.06e+05    1.16e+05\n","rd          3.582e+04   2033.946     17.612      0.000    3.17e+04    3.99e+04\n","mkt         3869.1207   2036.843      1.900      0.065    -247.493    7985.734\n","fl         -1149.0097   3709.723     -0.310      0.758   -8646.640    6348.621\n","ny           758.7406   3311.882      0.229      0.820   -5934.823    7452.304\n","==============================================================================\n","Omnibus:                       15.966   Durbin-Watson:                   2.492\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):               25.142\n","Skew:                          -1.016   Prob(JB):                     3.47e-06\n","Kurtosis:                       6.047   Cond. No.                         4.41\n","==============================================================================\n","\n","Warnings:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]}]},{"cell_type":"markdown","metadata":{"id":"D8NWvPowwhPs"},"source":["## 6.3 Avaliação de multicolinearidade"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"VdLMeX5Cwf02","executionInfo":{"elapsed":283,"status":"ok","timestamp":1644020933800,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"5beff6ee-6ae4-4626-cae3-bebe4c309aea"},"source":["pd.DataFrame({'Variaveis': xTrainRed.columns[1:],\n","              'VIF': [variance_inflation_factor(xTrainRed.values, i+1) for i in range(len(xTrainRed.columns[1:]))]})"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/statsmodels/stats/outliers_influence.py:185: RuntimeWarning: divide by zero encountered in double_scalars\n","  vif = 1. / (1. - r_squared_i)\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-053d6dd5-ce26-476c-9cde-64e7a1f460af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Variaveis</th>\n","      <th>VIF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>rd</td>\n","      <td>2.055984</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>mkt</td>\n","      <td>2.126109</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ca</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>fl</td>\n","      <td>inf</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ny</td>\n","      <td>inf</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-053d6dd5-ce26-476c-9cde-64e7a1f460af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-053d6dd5-ce26-476c-9cde-64e7a1f460af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-053d6dd5-ce26-476c-9cde-64e7a1f460af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  Variaveis       VIF\n","0        rd  2.055984\n","1       mkt  2.126109\n","2        ca       inf\n","3        fl       inf\n","4        ny       inf"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","metadata":{"id":"wiZLl2Eey9qa"},"source":["## 6.4 Qualidade de ajuste (Mínimos Quadrados)"]},{"cell_type":"code","metadata":{"id":"E8Unvplyy8Mc","colab":{"base_uri":"https://localhost:8080/","height":345},"executionInfo":{"status":"error","timestamp":1644021038232,"user_tz":180,"elapsed":291,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}},"outputId":"11cc03de-d1ca-460c-de98-f0647718e812"},"source":["predY = pd.concat([yTest, reg4fit.predict(xTest.drop('adm', axis = 1))], axis = 1)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-61-4a6576204fcc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpredY\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0myTest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreg4fit\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxTest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'adm'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, exog, transform, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1036\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1037\u001b[0m         predict_results = self.model.predict(self.params, exog, *args,\n\u001b[0;32m-> 1038\u001b[0;31m                                              **kwargs)\n\u001b[0m\u001b[1;32m   1039\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1040\u001b[0m         if exog_index is not None and not hasattr(predict_results,\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, params, exog)\u001b[0m\n\u001b[1;32m    362\u001b[0m             \u001b[0mexog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 364\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    365\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    366\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_distribution\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscale\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist_class\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mdot\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: shapes (5,6) and (5,) not aligned: 6 (dim 1) != 5 (dim 0)"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":182},"id":"oN__Ft_Dzjki","executionInfo":{"elapsed":288,"status":"error","timestamp":1644021052105,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"7278b338-5f21-4e53-eea3-82282994ff2a"},"source":["predY.columns = ['profReal', 'profPred']\n","predY"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-62-17bce6ea19b2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpredY\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'profReal'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'profPred'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mpredY\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'predY' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7UPz4lXZ0Pst","executionInfo":{"elapsed":110,"status":"ok","timestamp":1628025519384,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"81691035-e94a-4a2a-8d26-95d7b1c71422"},"source":["print('Rquadrado', metrics.r2_score(predY['profReal'], predY['profPred']))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Rquadrado 0.9365755604263571\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zk7_W0Oh1F_q","executionInfo":{"elapsed":106,"status":"ok","timestamp":1628025519385,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"009a3245-0370-40dd-db04-9c2752957380"},"source":["print('Raiz do erro quadrado médio', \n","      np.sqrt(metrics.mean_squared_error(predY['profReal'], predY['profPred'])))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Raiz do erro quadrado médio 9817.24051507419\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"BnsWEDrP2H-n"},"source":["## 6.5 Qualidade de ajuste (Gradiente descendente)"]},{"cell_type":"markdown","metadata":{"id":"gB7I37AG5r_B"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"EbY5SH7v4LgJ"},"source":["### 6.5.1 Ajuste do modelo reduzido"]},{"cell_type":"code","metadata":{"id":"KP-SPjRK33Tx"},"source":["# Salvar o tamanho do df com os regressores (incluindo o intercept)\n","m, n = xTrainRed.shape\n","\n","# Inicializa a série de betas\n","beta = np.zeros(n)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xNSlTvwa2RH8"},"source":["beta, hPerda = grad_des(X = xTrainRed , y = yTrain, beta = beta, alpha = alpha, itera = itera)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w692_vhj4THL"},"source":["### 6.5.2 Criar matrix com previões"]},{"cell_type":"code","metadata":{"id":"YSWsavAe4YRw"},"source":["predGradY = pd.concat([yTest, xTest.drop('adm', axis=1).dot(beta)], axis = 1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6bb0UmBi4zgN","executionInfo":{"elapsed":66,"status":"ok","timestamp":1628025521468,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"c9773967-b482-4614-c97c-953805704dde"},"source":["predGradY"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Profit</th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>103282.38</td>\n","      <td>101173.929112</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>144259.40</td>\n","      <td>133503.979045</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>146121.95</td>\n","      <td>132672.287753</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>77798.83</td>\n","      <td>72860.882041</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>191050.39</td>\n","      <td>178540.806994</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Profit              0\n","0  103282.38  101173.929112\n","1  144259.40  133503.979045\n","2  146121.95  132672.287753\n","3   77798.83   72860.882041\n","4  191050.39  178540.806994"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"IeR_E2Ml5cfg"},"source":["predGradY.columns = ['profReal', 'profPred']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pqVpL3oS5NHi"},"source":["### 6.5.3 Métricas de qualidade"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HvEkVcft5R6Y","executionInfo":{"elapsed":65,"status":"ok","timestamp":1628025521470,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"d47179c3-9872-41ab-868e-6490da27e834"},"source":["print('Rquadrado', metrics.r2_score(predGradY['profReal'], predGradY['profPred']))\n","print('Raiz do erro quadrado médio', \n","      np.sqrt(metrics.mean_squared_error(predGradY['profReal'], predGradY['profPred'])))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Rquadrado 0.9365755604263568\n","Raiz do erro quadrado médio 9817.24051507422\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"S4BNF3ReWglK"},"source":["# 7 ANÁLISE DE RESÍDUOS"]},{"cell_type":"markdown","metadata":{"id":"6DzNBQSLWueh"},"source":["## 7.1 Calculo dos Resíduos"]},{"cell_type":"code","metadata":{"id":"g6idGbO1Wj_A","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"error","timestamp":1644021168184,"user_tz":180,"elapsed":291,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}},"outputId":"dd38d884-a116-411a-f76d-19d41ec08819"},"source":["# Gerar previsões\n","predY = pd.concat([yTrain, reg4fit.predict(xTrainRed)], axis = 1)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-63-2ca29aebb465>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Gerar previsões\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mpredY\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0myTrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreg4fit\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxTrainRed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, exog, transform, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1036\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1037\u001b[0m         predict_results = self.model.predict(self.params, exog, *args,\n\u001b[0;32m-> 1038\u001b[0;31m                                              **kwargs)\n\u001b[0m\u001b[1;32m   1039\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1040\u001b[0m         if exog_index is not None and not hasattr(predict_results,\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, params, exog)\u001b[0m\n\u001b[1;32m    362\u001b[0m             \u001b[0mexog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 364\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    365\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    366\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_distribution\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscale\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist_class\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mdot\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: shapes (45,6) and (5,) not aligned: 6 (dim 1) != 5 (dim 0)"]}]},{"cell_type":"code","metadata":{"id":"e6woy9N1XOFR"},"source":["predY.columns = ['profReal', 'profPred']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"y9mpa-HUXQlh"},"source":["predY['Res'] = predY['profReal'] - predY['profPred']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9Lyicl3MXiSw","executionInfo":{"elapsed":63,"status":"ok","timestamp":1628025521473,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"c2f2e199-4981-44bd-bc0c-98788a4c9d0b"},"source":["predY.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>profReal</th>\n","      <th>profPred</th>\n","      <th>Res</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>105008.31</td>\n","      <td>115244.039573</td>\n","      <td>-10235.729573</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>81229.06</td>\n","      <td>69446.146726</td>\n","      <td>11782.913274</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>97483.56</td>\n","      <td>98298.998430</td>\n","      <td>-815.438430</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>110352.25</td>\n","      <td>113231.200990</td>\n","      <td>-2878.950990</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>166187.94</td>\n","      <td>168374.289616</td>\n","      <td>-2186.349616</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    profReal       profPred           Res\n","0  105008.31  115244.039573 -10235.729573\n","1   81229.06   69446.146726  11782.913274\n","2   97483.56   98298.998430   -815.438430\n","3  110352.25  113231.200990  -2878.950990\n","4  166187.94  168374.289616  -2186.349616"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"markdown","metadata":{"id":"cpeL7u8uXtk7"},"source":["## 7.2 Distribuição dos resíduos"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"MJBSWzycXkrK","executionInfo":{"elapsed":632,"status":"ok","timestamp":1628025522044,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"1f83a714-d78c-4ec3-b9d3-84db4da1fb6f"},"source":["fig = plt.figure()\n","plt.hist(predY['Res'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1.,  0.,  0.,  2.,  2.,  6., 16.,  8.,  6.,  4.]),\n"," array([-33786.66537421, -28779.23009423, -23771.79481424, -18764.35953425,\n","        -13756.92425427,  -8749.48897428,  -3742.05369429,   1265.3815857 ,\n","          6272.81686568,  11280.25214567,  16287.68742566]),\n"," <a list of 10 Patch objects>)"]},"metadata":{"tags":[]},"execution_count":71},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"jb8HMxNAX0IJ"},"source":["kStat, kPvalue = sp.stats.kstest(predY['Res'], 'norm')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7c6Fyz_iYeGR","executionInfo":{"elapsed":50,"status":"ok","timestamp":1628025522046,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"e055241f-af11-4061-c073-dfa213763f07"},"source":["kStat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5111111111111111"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5EhEBymqYfrE","executionInfo":{"elapsed":47,"status":"ok","timestamp":1628025522046,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"4985470f-cb05-4153-e10b-205498921342"},"source":["kPvalue"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.9730177301725436e-11"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"MKXwsJJwYiVW"},"source":["# Ajuste do modelo com Log da resposta\n","reg5 = sm.OLS(np.log(yTrain), xTrainRed)\n","reg5fit = reg5.fit()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ymILQwnCZDTg"},"source":["# Cálculo dos resíduos\n","predLogY = pd.concat([np.log(yTrain), reg5fit.predict(xTrainRed)], axis = 1)\n","\n","predLogY.columns = ['profLogReal', 'profLogPred']\n","\n","predLogY['LogRes'] = predLogY['profLogReal'] - predLogY['profLogPred']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"rEKrf1TJZf6N","executionInfo":{"elapsed":44,"status":"ok","timestamp":1628025522048,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"06bc5807-9f86-4f99-9ef1-30c9ef1c8996"},"source":["fig = plt.figure()\n","plt.hist(predLogY['LogRes'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1.,  0.,  0.,  0.,  0.,  1.,  0.,  9., 16., 18.]),\n"," array([-1.25037585, -1.10267465, -0.95497345, -0.80727225, -0.65957105,\n","        -0.51186985, -0.36416865, -0.21646744, -0.06876624,  0.07893496,\n","         0.22663616]),\n"," <a list of 10 Patch objects>)"]},"metadata":{"tags":[]},"execution_count":77},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"amTLbIQTZjMm"},"source":["kStat, kPvalue = sp.stats.kstest(predLogY['LogRes'], 'norm')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vczluSqHZ1LE","executionInfo":{"elapsed":40,"status":"ok","timestamp":1628025522048,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"685318c0-751d-487b-90f2-307053dfdb85"},"source":["kStat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4103533362594217"]},"metadata":{"tags":[]},"execution_count":79}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EZGw6P9fZ2X6","executionInfo":{"elapsed":39,"status":"ok","timestamp":1628025522049,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"caceee28-2148-47e0-888f-e986f832839f"},"source":["kPvalue"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.285315188032897e-07"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"N7orAJRKaLpj"},"source":["## 7.3 Homocedasticidade"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"yl8R79KQZ4oQ","executionInfo":{"elapsed":37,"status":"ok","timestamp":1628025522049,"user":{"displayName":"Samuel Bozzi Baco","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_I6hf5oGwx_YODAMhRzWq8Lk4_r7kv0gkV0d_xnY=s64","userId":"12629113116911705191"},"user_tz":180},"outputId":"23b3329b-bac4-4709-92ff-79774a46a223"},"source":["fig = plt.figure()\n","plt.scatter(predY['profPred'], predY['Res'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fca90852890>"]},"metadata":{"tags":[]},"execution_count":81},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"fNj0lkqIHCaj"},"source":["# 8 REGRESSÃO REGULARIZADA"]},{"cell_type":"code","metadata":{"id":"kQQmEoL_HFwI","executionInfo":{"status":"ok","timestamp":1644023675105,"user_tz":180,"elapsed":261,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}}},"source":["# Especificar o modelo\n","regRidge = Ridge(alpha=0.1)"],"execution_count":67,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B70IIBo0HfAH","executionInfo":{"elapsed":8,"status":"ok","timestamp":1644023676196,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"e9e33811-d32d-477f-a513-4f4bfecca948"},"source":["regRidge.fit(xTrain.drop(['Intercept', 'ca'], axis=1), yTrain)"],"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ridge(alpha=0.1)"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fQxbsHoPHmPU","executionInfo":{"elapsed":4,"status":"ok","timestamp":1644023677580,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"292b6f50-9182-4eda-96ef-be333e04c1d8"},"source":["print(regRidge.coef_)"],"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["[[35547.43545277   214.93479161  4047.11894302 -1148.90169109\n","    806.98268321]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jqhlpZgIKJGI","executionInfo":{"elapsed":4,"status":"ok","timestamp":1644023678275,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"c4da3ea9-786b-4203-f93c-0c56b833e374"},"source":["print(regRidge.intercept_)"],"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["[111215.66068219]\n"]}]},{"cell_type":"code","metadata":{"id":"vwYqQMs7Ns1I","executionInfo":{"status":"ok","timestamp":1644023680091,"user_tz":180,"elapsed":292,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}}},"source":["# Prever valores para o dataset de testex\n","predYReg = pd.concat([yTest, pd.DataFrame(regRidge.predict(xTest.drop(['Intercept', 'ca'], axis = 1)))], axis = 1)"],"execution_count":71,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"oEQjMZRJOC2N","executionInfo":{"elapsed":7,"status":"ok","timestamp":1644023680985,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"7228d28d-dd9d-4917-a94c-26b036cb9939"},"source":["predYReg"],"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-6cd80ab4-ee23-49dc-b3b5-de25309f088d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Profit</th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>103282.38</td>\n","      <td>101523.476025</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>144259.40</td>\n","      <td>133141.110375</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>146121.95</td>\n","      <td>132416.399246</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>77798.83</td>\n","      <td>72754.571035</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>191050.39</td>\n","      <td>178164.745985</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cd80ab4-ee23-49dc-b3b5-de25309f088d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6cd80ab4-ee23-49dc-b3b5-de25309f088d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6cd80ab4-ee23-49dc-b3b5-de25309f088d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      Profit              0\n","0  103282.38  101523.476025\n","1  144259.40  133141.110375\n","2  146121.95  132416.399246\n","3   77798.83   72754.571035\n","4  191050.39  178164.745985"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"tSP7m7_EOSOK","executionInfo":{"status":"ok","timestamp":1644023683431,"user_tz":180,"elapsed":256,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"}}},"source":["predYReg.columns = ['Profit', 'predProfit']"],"execution_count":73,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uYvlVqSxOfWV","executionInfo":{"elapsed":417,"status":"ok","timestamp":1644023685197,"user":{"displayName":"Antonio Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjZEHtUrMDakXJbzV0ggZa2UsdF8mODLTIGGp0fsFw=s64","userId":"14414005921057919204"},"user_tz":180},"outputId":"f2b63f7a-6da1-4e57-e1a5-85504fc446aa"},"source":["print('Rquadrado', metrics.r2_score(predYReg['Profit'], predYReg['predProfit']))\n","print('Raiz do erro quadrado médio', \n","      np.sqrt(metrics.mean_squared_error(predYReg['Profit'], predYReg['predProfit'])))"],"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Rquadrado 0.9333976274210263\n","Raiz do erro quadrado médio 10060.184879396556\n"]}]}]}